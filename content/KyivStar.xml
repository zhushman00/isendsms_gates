<?xml version="1.0" encoding="UTF-8"?>
<gate>
	<name>KyivStar</name>
	<caption>Киевстар</caption>
	<type>SMS</type>
	<class>HTTP</class>
	<version>19</version>
	<priority>30</priority>
	<country>Украина</country>
	<prefixlist>
		<prefix start="+380 67" end="+380 68" format="3.2.7"/>
		<prefix start="+380 96" end="+380 98" format="3.2.7"/>
	</prefixlist>
	<info>
		<maxsymbols>120</maxsymbols>
		<maxunicodesymbols>70</maxunicodesymbols>
		<supportflash>0</supportflash>
		<supportdtdelivery>0</supportdtdelivery>
		<supportunicode>1</supportunicode>
		<supportcheckdelivery>1</supportcheckdelivery>
		<captcha>1</captcha>
		<gateurl>http://www.kyivstar.ua/ru/kr-620/sms/</gateurl>
	</info>
	<classprops>
		<encoding>UTF-8</encoding>
		<pageurl>http://www.kyivstar.ua/ru/kr-620/sms/</pageurl>
		<imageurl>eval(
			begin
				Stored['key'] := Html.RegExp('data-sitekey=&quot;(.*?)&quot;',1);

				HTTP.HTTPMethod('GET','http://smsgate.kyivstar.ua/_sms/ajax/?action=init&amp;callback=jsonCallback&amp;lang=ru&amp;_=' + VarToStr(DateTimeToUnix(Now())));
				Stored['mid'] := HTML.RegExp('&quot;mid&quot;:&quot;(.*?)&quot;', 1);
				if Stored['mid'] = '' then
					Stored['error']:='Превышен лимит в 5 сообщений в сутки';

				HTTP.Referer:='http://www.kyivstar.ua/ru/kr/sms/';
				HTTP.HTTPMethod('GET', 'https://www.google.com/recaptcha/api/fallback?k=' + Stored['key']);
				Stored['challenge'] := Html.RegExp('name=&quot;c&quot; value=&quot;(.*?)&quot;', 1);
				Result := 'www.google.com' + ReplaceStr(Html.RegExp('fbc-imageselect-payload.*?src=&quot;(.*?)&quot;', 1), 'amp;', '');
			end;)	
		</imageurl>
		<clickimage>1</clickimage>
		<clickimagewidth>100</clickimagewidth>
		<clickimageheight>100</clickimageheight>
		<proccessimage>eval(
			var
				x,y,dstx,dsty: integer;
			begin
				Img.SetSize(500, 200);
				dstx := 0; dsty := 0;
				for y:=0 to 2 do
					for x:=0 to 2 do
					begin
						Img.CopyRect(dstx, dsty, Bounds(x*100,y*100,100,100));
						dstx := dstx + 100;
						if dstx = 500 then
						begin
							dstx := 0;
							dsty := dsty + 100;
						end;
					end;
			end;
		)
		</proccessimage>		
		<imagedescription>eval(CleanMessageText(Html.RegExp('class=&quot;fbc-imageselect-message-text&quot;&gt;(.*?)&lt;/label&gt;', 1)))</imagedescription>
		<gateerror>eval(Stored['error'])</gateerror>
		<posturl>http://www.kyivstar.ua/_ajax/sms/?action=send</posturl>
		<postdata>eval(
			var
				i: integer;
				CaptchaResponse: string;
			begin
				PostData.UnsafeFormElem:= URLSpecialChar + ' ' + NonAsciiChar;
				PostData.Add('c',Stored['challenge']);
				//Отправляем выбранные картинки
				for i:=1 to 9 do
				begin
					if Pos(VarToStr(i), SMS['Code'])>0 then
						PostData.Add('response', VarToStr(i-1));
				end;
				Http.HTTPMethod('POST', 'https://www.google.com/recaptcha/api/fallback?k=' + Stored['key']);
				CaptchaResponse := Html.RegExp('&lt;textarea.*?onclick=&quot;this.select\(\)&quot;&gt;(.*?)&lt;/textarea&gt;', 1);

				HTTP.Headers['X-Requested-With']:='XMLHttpRequest';
				HTTP.Headers['X-CSRF-Token']:=Stored['authenticity_token'];
				HTTP.Headers.RemoveNamed('Accept');
				HTTP.Headers['Accept']:='application/json, text/javascript, */*; q=0.01';

				PostData.Add('code','0'+SMS['Phone_Def']);
				PostData.Add('phone',SMS['Phone_Number']);
				PostData.Add('message',SMS['Text']);
				PostData.Add('is_cyrillic',iff(isAscii(SMS['Text']),'0','1'));
				PostData.Add('g-recaptcha-response',CaptchaResponse);
				PostData.Add('mid',Stored['mid']);
			end;)
		</postdata>
		<success>eval(begin
						Result:=HTML.ExistsStr('&quot;mid&quot;');
					 end;)
		</success>
		<error>eval(
			var
				Error: string;
			begin
				Error:=Html.RegExp('&quot;error&quot;:&quot;(.*?)&quot;',1);
				if Error = 'sms-limit-excceeded' then
					Result:='Ваш лимит отправки коротких сообщений на сегодня исчерпан.'
				else if Error = 'denied-mob-prefix' then
					Result:='Неверный код оператора'
				else if Error = 'wrong-number-format' then
					Result:='Указан неверный номер телефона.'
				else if Error = 'denied-mobile-number' then
					Result:='Отправка SMS с сайта заблокирована по просьбе собственника телефона.'
				else if Error = 'denied-content' then
					Result:='Ошибка'
				else if Error = 'sms-length-overflow' then
					Result:='Сообщение слишком длинное'
				else if Error = 'error-while-sending' then
					Result:='Произошла ошибка.'
				else if Error = 'captcha-is-wrong' then
					Result:='Неверно выбраны изображения. Попробуйте еще раз.'
				else if Error = 'cpi-error' then
					Result:='Во время отправления SMS произошла ошибка'
				else if Error = 'sms-session-expired' then
					Result:='Сессия завершена. Попробуйте еще раз.'
				else if Error = 'unknown-error' then
					Result:='Произошла ошибка.'
				else if Error = 'limit-exceeded' then
					Result:='Лимит сообщений на сегодня исчерпан.'
				else
					Result:='Произошла неизвестная ошибка';
			end;)
		</error>
		<cd_method>GET</cd_method>
		<cd_url>eval('http://smsgate.kyivstar.ua/_sms/ajax/status/?callback=jsonCallback&amp;id=' + Stored['mid'] + '&amp;_=' + VarToStr(DateTimeToUnix(Now())))</cd_url>
		<cd_success>eval(
						begin
							if HTML.ExistsStr('Delivered') then
								Result:=true
							else if Html.ExistsStr('Undeliverable') then
								Result:=false
							else if Html.ExistsStr('jsonCallback({})') then
								Result:='WAIT'
							else Result:=false;
						end;	
					   )
		</cd_success>
		<cd_error>eval(
				begin
					Result:='Ошибка подверждения доставки';
				end;
			)
		</cd_error>
	</classprops>
</gate>
